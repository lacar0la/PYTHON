# -*- coding: utf-8 -*-
"""Calcular sucesión de Fibonacci.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a76lFW3evX5T8f46DZE9IwvD5KIK78zg

# Reto 1: Calcular sucesión de Fibonacci

En matemáticas, la sucesión o serie de Fibonacci es la siguiente sucesión infinita de números naturales: 0,1,1,2,3,5,8,13,...

 La sucesión comienza con los números 0 y 1, y a partir de estos, cada término es la suma de los dos anteriores.

Cree una función que reciba un número que indica la cantidad de números de la sucesión que se quieren encontrar y retorne una cadena con los números separados por coma.

Por ejemplo, el resultado de la función, si se pasa como parámetro el número 18 es el siguiente:

*0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597*


Su solución debe tener una función de acuerdo con la siguiente especificación:

**Nombre de la función: sucesion_fibonacci**

Si lo requiere, puede agregar funciones adicionales.
"""

def sucesion_fibonacci(cantidad_numeros: int)-> str:
    
    a = 1
    b = 0
    c = 0
    
    sucesion = ["0","," ,"1"]
    cadena_sucesion= ''
    
    
    if cantidad_numeros == 1:
        return "0"
    if cantidad_numeros == 2:
        return "0,1" 
    else:
        
        while len(sucesion) <= cantidad_numeros:
            
            c = a + b
            b = a
            a = c
            sucesion.append(","+str (c) )
            
            cadena_sucesion = "".join(sucesion)
            cadena_sucesion = str(cadena_sucesion)
            
        return cadena_sucesion